#include <windows.h>
#include <stdio.h>
#include <assert.h>
#include <string.h>
//clase cadena
//tiene que tener caracter i longitud
//mai surt de rang
//constructors string();ng(const char*); String(const String&); 
#define TMP_STRING_SIZE 4091
class Cadena
{
private:
	int longitud;
	char* car;
public:
	Cadena(){ longitud = 1; 
	car = new char[longitud]; 
	car[0] = '\0'; }

	Cadena(const char* c ){ 
		longitud = strlen(c) + 1;
		car = new char[longitud];
		strcpy_s(car,longitud,c);

	}
	Cadena(const Cadena& cadena ){ 
		longitud = cadena.longitud;
		car = new char[longitud];
	}

	Cadena(const char *format, ...)
	{
		longitud = 0;
		if (format != NULL)
		{
			static char tmp[TMP_STRING_SIZE];
			static va_list ap;
			// Construct the string from variable arguments
			va_start(ap, format);
			int res = vsprintf_s(tmp, TMP_STRING_SIZE, format, ap);
			va_end(ap);
			if (res > 0)
			{
				Alloc(res + 1);
				strcpy_s(car, longitud, tmp);
			}
		}
		if (longitud == 0)
		{
			Alloc(1);
			Clear();
		}
	}
	~Cadena(){ delete[]car; }

	bool operator ==(const char* _string){
		if (_string != NULL){
			return strcmp(car, _string) == 0;
		}
		return false;
	}
	bool operator !=(const char* _string){

		if (_string != NULL){

			return strcmp(car, _string) != 0;
		}
		return true;
	}

	bool operator ==(const Cadena& cadena){
		
		return strcmp(car, cadena.car) == 0;
	}

	bool operator !=(const Cadena& cadena){

		return strcmp(car, cadena.car) != 0;

	}

	const Cadena& operator =(const char* _string)
	{
		if (_string != NULL)
		{
			if (strlen(_string) + 1 > longitud)
			{
				delete[] car;
				Alloc(strlen(_string) + 1);
			}
			else
				Clear();
			strcpy_s(car, longitud, _string);
		}
		else
		{
			Clear();
		}
		return(*this);
	}

	const Cadena& operator =(const Cadena &cadena)
	{
		if (cadena.Length() + 1 > longitud)
		{
			delete[] car;
			Alloc(cadena.Length() + 1);
		}
		else
			Clear();
		strcpy_s(car, longitud, cadena.car);
		return(*this);
	}

	const Cadena& operator +=(const char* _string)
	{


		return(*this);
	}

	const Cadena& operator +=(const Cadena &cadena)
	{


		return(*this);
	}

		int Length(){

			return strlen(car);
		}
		char* getString(){

			return car;
		}

		int Capacity(){
		
			return longitud;
		}

		void Clear(){
			delete[] car;
			int longitud = 1;
			car = new char[longitud];
 
		}


	
};
